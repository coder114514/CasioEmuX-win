<lua> disas.lua key1=value1 key2=value2 ...

keys and default values:
input = "conIn$"            -- Path to input file

output = "conOut$"          -- Path to output file

entry = ""                  -- Comma-separated list of 0-indexed indices of used (reset/interrupt)
                            -- vectors (each vector takes 2 bytes, so the address of vector with index
                            -- `i` is `2*i`)

complement_entries = false  -- The list of entries (above) should be inverted in range [1..127]

strict = false              -- Raises error instead of warnings when unknown instructions are
                            -- encountered or jump to addresses exceed the ROM size.

addresses = false           -- Each line should have a comment containing the address and source bytes

word_commands = false       -- Add comments for word-manipulation commands.
                            -- Example:
                            --   mov r0, 1
                            --   mov r1, 1
                            -- and
                            --   mov er0, 257
                            -- are equivalent (but the latter is not valid assembly code)

rom_window = 0              -- Size of the ROM window. For example `0x8000`

names = nil                 -- Path to a file containing label names.
                            -- Each line should either be a comment, empty, or starts with
                            -- `raw_label_name real_label_name` (`real_label_name` may be empty).
                            -- `raw_label_name` may have one of the following formats:
                            -- * A global label `f_01234`
                            -- * A local label `.l_5`
                            -- * A global label followed by a local label `f_01234.l_5`
                            -- * An address - a hex number without leading `0x`. In that case, it's
                            -- considered a possible address for the code to reach - this is necessary
                            -- because the disassembler cannot resolve all variable branches/function
                            -- calls.